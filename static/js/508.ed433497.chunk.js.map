{"version":3,"file":"static/js/508.ed433497.chunk.js","mappings":"6LA8DA,IACA,EAAe,IAA0B,yDC4CzC,IACA,EAAe,IAA0B,0D,mBC/FnCA,EAAiC,CACrC,OACA,SACA,SACA,OACA,UAsIF,EAnIe,WACb,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAwBN,EAAAA,EAAAA,UAA2B,QAAnD,eAAOO,EAAP,KAAaC,EAAb,KAEA,GAAoCR,EAAAA,EAAAA,UAAS,IAA7C,eAAOS,EAAP,KAAmBC,EAAnB,KACA,GAA0BV,EAAAA,EAAAA,WACxBW,EAAAA,EAAAA,GAAO,GAAG,kBAAMA,EAAAA,EAAAA,GAAO,GAAG,kBAAM,CAAN,GAAhB,KADZ,eAAOC,EAAP,KAAcC,EAAd,KAgBA,OACE,gBAAKC,UAAW,cAAhB,UACE,UAAC,KAAD,YACE,2BACE,wTAOA,sKAKA,uYAUF,SAAC,KAAD,KAEA,iBAAKA,UAAU,cAAf,WACE,iBAAKA,UAAU,YAAf,WACE,SAAC,KAAD,CACEC,MAAM,cACNC,SAAS,4EACTC,MAAOhB,EACPiB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBjB,EAAciB,EAAOF,MAArC,KAGZ,SAAC,KAAD,CACEF,MAAM,QACNC,SAAS,wGACTC,MAAOZ,EACPa,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBb,EAASa,EAAOF,MAAhC,QAId,iBAAKH,UAAU,YAAf,WACE,SAAC,KAAD,CACEC,MAAM,cACNC,SAAS,gGACTC,MAAOd,EACPe,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBf,EAAce,EAAOF,MAArC,KAGZ,SAAC,KAAD,CACEF,MAAM,aACNC,SAAS,oDAFX,UAGE,mBACEF,UAAU,cACVG,MAAOV,EACPW,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OACRX,EAAQW,EAAOF,MADP,EAHZ,SAMGlB,EAAWqB,KAAI,SAACC,GAAD,OACd,mBAAQJ,MAAOI,EAAf,SAAmBA,GADL,YAOtB,iBAAKP,UAAU,YAAf,WACE,SAAC,KAAD,CACEQ,UAAQ,EACRP,MAAM,wBACNC,SAAS,mFACTC,MAAOR,KAGT,SAAC,KAAD,CACEM,MAAM,iBACNC,SAAS,uHAFX,UAGE,gBAAKF,UAAU,QAAf,SACGF,EAAMQ,KAAI,SAACC,GAAD,OACT,gBAAKP,UAAU,OAAf,SACGO,EAAED,KAAI,SAACG,GAAD,OACL,gBACEC,IAAKD,EAAKE,EAAOC,EACjBC,IAAI,OACJb,UAAU,aAJP,KAFA,YAejB,mBACEc,KAAK,SACLd,UAAU,yBACVe,QA/GQ,WAChB,OAAwBC,EAAAA,EAAAA,IACtB7B,EACAE,EACAE,EACAE,GAJMwB,EAAR,EAAQA,KAAMnB,EAAd,EAAcA,MAOdF,EAAcqB,GACdlB,EAASD,EACV,EAkGO,8BAUT,C,uDCtJM,IAAMD,EAAS,SACpBqB,EACAC,GAIA,IAFA,IAAMC,EAAc,GAEXC,EAAI,EAAGA,EAAIH,EAAQG,IAC1BD,EAAOE,KAAKH,EAASE,EAAGH,IAG1B,OAAOE,CACR,C","sources":["pages/Towers/towers/fish.svg","pages/Towers/towers/vomit.svg","pages/Towers/index.tsx","utils/repeat.ts"],"sourcesContent":["var _circle, _path, _path2, _path3, _path4, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFish(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 40,\n    viewBox: \"0 0 40 40\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 20,\n    cy: 20,\n    r: 20,\n    fill: \"black\",\n    fillOpacity: 0.15\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 15C8.2 14.6 6.66667 14.1667 6 14C5.83333 14.3333 5.6 15.4 6 17C6.4 18.6 7.5 20 8 20.5C7.66667 21 6.9 22.2 6.5 23C6.1 23.8 5.66667 26.3333 5.5 27.5C6.16667 27.5 7.8 27.3 9 26.5C10.2 25.7 10.8333 24.8333 11 24.5C13.3333 26.5 19.5 30.1 25.5 28.5C31.5 26.9 34.6667 22.5 35.5 20.5C34.1667 18.3333 30.1 13.8 24.5 13C18.9 12.2 13.1667 15.3333 11 17C10.6667 16.5 9.8 15.4 9 15Z\",\n    fill: \"url(#paint0_linear_224_34808)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.5 10C23.1 11.2 23.6667 12.5 23.5 13C22.8333 12.8333 21.1 12.6 19.5 13C17.9 13.4 16.1667 14.1667 15.5 14.5L13.5 8.5C14 8.5 15.9 8.8 19.5 10Z\",\n    fill: \"#1DF975\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 31C20.6 30.6 21.6667 29.5 22 29L17 27.5C16.8333 27.6667 16.4 28.3 16 29.5C15.6 30.7 15.8333 31.3333 16 31.5C16.3333 31.5 17.4 31.4 19 31Z\",\n    fill: \"#1DF975\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M13.1435 8.04837C12.9533 8.12883 12.808 8.33024 12.7744 8.56025C12.7505 8.72343 12.8867 9.17611 13.3745 10.5546C13.7216 11.5353 14.1199 12.732 14.2595 13.2137C14.3992 13.6955 14.5248 14.1259 14.5388 14.1702C14.5549 14.2213 14.316 14.3743 13.8841 14.5894C13.0487 15.0056 12.0523 15.5785 11.5078 15.956L11.099 16.2394L10.8435 15.8841C9.9553 14.6486 8.54013 13.8009 6.80866 13.4671C6.52979 13.4133 6.11092 13.3638 5.87781 13.3571C5.03161 13.3329 4.89574 13.658 5.0617 15.3098C5.28415 17.5232 5.89937 19.2064 6.91087 20.3689C7.15421 20.6487 7.16928 20.6841 7.07749 20.7618C6.88078 20.9283 6.29468 21.7974 6.04589 22.2916C5.5445 23.2875 5.24903 24.3694 5.09058 25.7897C4.92456 27.2776 4.9799 27.7126 5.36117 27.9163C5.58156 28.0341 5.78372 28.0348 6.51356 27.9202C7.80793 27.7171 9.0064 27.2065 9.87392 26.4885C10.2939 26.141 10.4801 25.9347 11.0017 25.2387C11.1 25.1075 11.1013 25.1079 11.5769 25.4266C12.5138 26.0543 13.921 26.8111 15.2219 27.3868C15.8012 27.6432 15.9615 27.7395 15.9379 27.8172C15.9212 27.8724 15.8384 28.0879 15.754 28.2963C15.541 28.8217 15.4091 29.6383 15.3705 30.6716L15.3377 31.5487L15.5006 31.7488C15.7156 32.0129 15.9161 32.0442 16.8191 31.9552C19.1732 31.7232 21.1113 30.9434 22.3799 29.7179L22.7705 29.3407L23.3457 29.2981C27.2947 29.0059 30.518 27.5107 33.186 24.7334C33.5865 24.3166 34.0656 23.7785 34.2509 23.5376C35.0779 22.4619 36 20.9595 36 20.6875C36 20.3734 35.1513 18.9689 34.3043 17.8818C31.9142 14.8134 28.6929 12.8695 24.9459 12.2341L24.1422 12.0978L23.6918 11.6487C22.0436 10.0052 18.7556 8.76366 14.3241 8.1115C13.4237 7.97898 13.3206 7.97348 13.1435 8.04837ZM15.4693 9.65157C18.0042 10.1128 20.3891 10.9157 21.7346 11.7606L22.0912 11.9846L21.8859 12.0174C21.773 12.0355 21.5035 12.0675 21.2871 12.0887C20.2721 12.1879 18.4447 12.681 16.9013 13.2722C16.3114 13.4981 15.8075 13.683 15.7817 13.683C15.7558 13.683 15.6855 13.493 15.6254 13.2607C15.5082 12.8082 14.9567 11.101 14.6047 10.1009C14.4241 9.588 14.4055 9.4909 14.488 9.4909C14.542 9.4909 14.9836 9.56323 15.4693 9.65157ZM23.2865 13.369C25.3066 13.5043 26.9976 13.9643 28.671 14.8336C30.9512 16.018 32.9472 17.9173 34.3418 20.2296L34.6157 20.6836L34.1606 21.3911C33.529 22.3729 32.9966 23.0466 32.2171 23.8504C31.0737 25.0297 30.0054 25.8207 28.583 26.5412C26.6301 27.5306 24.7725 27.9774 22.6191 27.9759C21.4333 27.975 20.8786 27.9031 19.6826 27.5949C16.9739 26.8969 12.9856 25.0186 11.4863 23.7348C11.1412 23.4392 10.8983 23.3503 10.6762 23.4381C10.4993 23.5081 10.3921 23.6426 10.149 24.1007C9.73291 24.8846 9.15123 25.4766 8.36085 25.9207C7.86436 26.1996 7.12781 26.4718 6.61104 26.5672L6.31502 26.6219L6.35499 26.0843C6.50672 24.045 7.26029 22.2769 8.3577 21.3857C8.57858 21.2063 8.78874 20.9928 8.8247 20.9112C8.93635 20.6579 8.83596 20.337 8.58463 20.1437C7.66038 19.433 6.98304 18.3283 6.6375 16.9679C6.49043 16.389 6.33192 15.3639 6.33192 14.9919V14.7357L6.58924 14.7795C7.04195 14.8567 7.80152 15.1275 8.27481 15.3805C9.13797 15.8419 9.76197 16.4814 10.2092 17.3629C10.5576 18.0498 10.904 18.1017 11.5478 17.5635C12.7978 16.5184 15.8985 14.9617 18.3808 14.1329C19.6827 13.6983 20.7371 13.4571 21.6908 13.3759C22.0182 13.348 22.3133 13.3217 22.3466 13.3177C22.3799 13.3135 22.8029 13.3367 23.2865 13.369ZM22.0585 14.8085C21.864 14.9667 21.4165 15.8628 21.1678 16.5925C20.7176 17.9129 20.5294 19.1273 20.5326 20.6907C20.5357 22.1976 20.673 23.1417 21.0835 24.4761C21.2721 25.0894 21.4757 25.3208 21.8265 25.3208C22.0037 25.3208 22.1089 25.2749 22.2553 25.1336C22.4313 24.9637 22.4468 24.9189 22.4237 24.6487C22.4097 24.485 22.324 24.0976 22.2333 23.7879C21.9504 22.8219 21.8177 21.8427 21.8178 20.722C21.818 18.9397 22.1288 17.439 22.7725 16.1124C23.1073 15.4221 23.1287 15.1385 22.8659 14.867C22.648 14.6418 22.2951 14.6162 22.0585 14.8085ZM24.6379 14.8321C24.4123 15.0283 24.0976 15.6388 23.8112 16.436C22.7387 19.4216 22.8888 23.1128 24.1914 25.7901C24.4791 26.3813 24.5583 26.4945 24.753 26.5928C24.9435 26.689 25.0135 26.6958 25.191 26.6352C25.4611 26.5431 25.6464 26.2993 25.6464 26.0362C25.6464 25.9173 25.5332 25.596 25.3792 25.2781C24.613 23.6962 24.2684 21.709 24.4273 19.7894C24.5462 18.3529 24.8121 17.3004 25.3565 16.1101C25.613 15.5494 25.6571 15.4018 25.6264 15.2066C25.5774 14.8939 25.4132 14.7394 25.0904 14.7018C24.8664 14.6757 24.7936 14.6967 24.6379 14.8321ZM27.9678 17.3706C26.9634 17.625 26.6375 18.9368 27.4016 19.6502C28.2723 20.4632 29.607 19.7546 29.5088 18.5315C29.4469 17.7609 28.6871 17.1884 27.9678 17.3706ZM18.9682 28.7607C19.4411 28.8951 20.077 29.0523 20.3814 29.11L20.9347 29.2152L20.7628 29.336C20.2475 29.6982 19.3203 30.0944 18.4507 30.3238C17.9753 30.4493 16.692 30.6669 16.6551 30.6284C16.6161 30.5877 16.7551 29.4732 16.8448 29.1062C16.8953 28.8997 17.0029 28.6129 17.0839 28.4688L17.2311 28.2067L17.6697 28.3615C17.9109 28.4467 18.4952 28.6263 18.9682 28.7607Z\",\n    fill: \"black\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_224_34808\",\n    x1: 20.5,\n    y1: 12.8716,\n    x2: 20.5,\n    y2: 28.8987,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#1DF9F9\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#0E8EB7\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFish);\nexport default __webpack_public_path__ + \"static/media/fish.dec85382c0a2b88afb027dacf9b42ea3.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgVomit(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 41,\n    height: 38,\n    viewBox: \"0 0 41 38\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.7772 13.5946C20.7172 11.2836 19.8155 16.4546 19.8155 16.4546C21.3442 17.7322 20.3251 13.0035 24.7261 13.9002C26.3825 14.2377 32.551 15.9053 34.2515 15.3678C36.1216 14.7767 37.9998 16 37.1407 17.7923C36.1912 19.7733 33.1931 19.3735 33.7811 20.1033C34.3691 20.8331 35.9926 21.0742 36.1216 21.8698C36.3134 23.052 38.1599 21.2788 39.6886 23.6431C40.9454 25.587 39.499 27.1216 37.4998 27C35.5007 26.8784 35.9406 26.1351 34.9998 26.5C34.059 26.8649 33.1575 28.0153 33.9807 27.8937C34.8039 27.7721 36.1216 28 36.4998 29.5C36.748 30.4843 36.5286 30.2972 34.9998 32C33.4711 33.7028 32.352 34.1082 30 33.5C27.648 32.8918 25.4992 35.0135 23.5 35.5C21.5008 35.9865 18.5 35.5 17 35C16.3306 34.7769 14.783 33.9348 13.5 33.1006C11.6709 31.9113 11.8977 33.2222 10.1337 33.1006C8.36978 32.9789 6.59048 32.2192 6.49981 31C6.40914 29.7808 5.49983 29.5 5.99983 28.5C6.49983 27.5 4.7241 27.2243 3.99983 26.5C3.49983 26 4.00465 25.125 4.49981 24C4.93997 23 5.55819 22.2433 4.49981 22C3.44143 21.7567 3.44149 20.9506 4.49987 20.2208C5.55825 19.491 6.79513 18.5221 9.49989 18.5221C12.2046 18.5221 15.4358 20.1033 16.6118 19.7384C17.7878 19.3735 17.1998 18.7654 16.259 18.5221C15.3182 18.2789 13.2015 18.0356 12.1431 17.7923C11.0847 17.5491 11.6727 16.9409 12.4959 16.4544C13.3191 15.9679 11.6727 16.4544 10.6143 16.2111C9.55592 15.9679 9.90871 14.5083 11.6727 14.2651C13.4367 14.0218 14.8373 15.9056 17.7772 13.5946Z\",\n    fill: \"url(#paint0_linear_224_35064)\",\n    stroke: \"#3D1803\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.2641 18.9993C19.7645 19.9994 20.2626 19.9994 21.7632 18.4993C23.2637 16.9992 22.7637 16.4992 21.7637 15.4992C21.0331 14.7686 19.7627 10.9991 23.7637 9.4995C28.0802 7.88161 30.7627 10.9995 32.7627 13.9995C34.7627 16.9995 30.7627 19.9993 31.2627 20.9993C31.7627 21.9993 33.7627 25.4995 30.7627 26.9995C27.7627 28.4995 25.2627 28.9995 23.2627 27.4995C21.2627 25.9995 20.7627 28.4995 17.7627 29.4995C14.7627 30.4995 10.2632 27.4995 8.76316 26.9995C7.26316 26.4995 5.26316 22.9993 7.76316 20.4993C10.2632 17.9993 14.7638 17.9992 17.2641 18.9993Z\",\n    fill: \"url(#paint1_linear_224_35064)\",\n    stroke: \"#3D1803\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.2645 25.4992C21.6648 26.2993 21.0973 27.4993 20.7636 27.9992C21.0972 27.6659 21.8645 26.9992 22.2645 26.9992C22.6645 26.9992 22.7645 27.3326 22.7645 27.4992C22.9312 27.1659 23.0645 26.2992 22.2645 25.4992C21.4645 24.6992 20.5979 24.1659 20.2645 23.9992C20.4311 24.1658 20.8643 24.6991 21.2645 25.4992Z\",\n    fill: \"#2F2003\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.7645 18.9992C30.3645 19.3992 30.7645 20.1659 30.7645 20.4992C29.7645 19.4988 29.3252 21.6453 28.2645 21.9988C26.7645 22.4988 25.7645 21.4988 25.7645 21.4988C25.7645 21.4988 27.7645 21.4988 28.2645 20.9988L28.7645 20.4988C28.5979 20.3322 27.5688 19.651 27.2645 19.4988C26.4645 19.0988 25.5979 19.3324 25.2645 19.4992C25.7645 19.1659 27.1645 18.5992 28.7645 18.9992Z\",\n    fill: \"#2F2003\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.7645 15.9988C31.3645 16.3988 32.4312 17.4988 32.7645 17.9988L32.2645 18.4993C31.9312 18.1659 30.9645 17.2993 29.7645 16.4993C28.5645 15.6993 26.2645 16.499 25.2645 16.9988C26.0979 16.4988 28.1645 15.5988 29.7645 15.9988Z\",\n    fill: \"#2F2003\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.2637 26.4993C12.8637 27.2992 12.9312 28.6659 13.2645 28.9993L11.2637 27.9993C11.2637 27.3326 11.8334 26.1194 12.7637 25.4993C14.2637 24.4993 15.597 24.4993 16.2637 24.4993C15.264 24.8326 13.6637 25.6993 13.2637 26.4993Z\",\n    fill: \"#2F2003\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.7637 21.4988C21.097 21.499 19.6637 21.2993 19.2637 20.4993C18.8637 19.6993 18.4303 19.4992 18.2637 19.4992C18.7637 19.4992 19.8637 19.6993 20.2637 20.4993C20.6637 21.2993 21.4303 21.499 21.7637 21.4988Z\",\n    fill: \"#2F2003\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.2637 13.4993C22.855 14.3166 22.7637 15.8326 22.7637 16.4993L21.7637 15.4993C21.7637 15.4993 21.9474 14.6317 22.2637 13.9993C22.7637 12.9993 24.097 11.8326 24.7637 11.4993C24.7637 11.4993 23.6723 12.682 23.2637 13.4993Z\",\n    fill: \"#2F2003\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.26367 23.4993C8.55932 24.908 8.76367 26.3326 8.76367 26.9993L7.26367 25.4993C7.26367 25.1659 7.24387 24.0191 8.26367 22.9993C9.26367 21.9993 10.9303 21.4993 11.7637 21.4993C11.097 21.8326 9.76367 22.4993 9.26367 23.4993Z\",\n    fill: \"#2F2003\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.4638 18.5791C32.6171 18.7997 32.0598 19.1443 31.887 19.2891C31.7141 19.4338 31.3368 19.8313 31.21 20.2633C31.0832 20.6952 31.4962 21.064 31.7186 21.1945C32.0218 20.8274 32.732 20.0063 33.1468 19.6589C33.5615 19.3115 34.7516 18.6313 35.2949 18.3346C35.0373 18.3242 34.3105 18.3584 33.4638 18.5791Z\",\n    fill: \"#36270B\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.2713 24.4851C33.4497 24.0876 32.7291 23.9673 32.4716 23.9568L32.2602 24.6767C32.5178 24.6872 33.2129 24.7609 33.9328 24.9722C34.6527 25.1835 35.6869 25.8781 36.114 26.199C35.8421 25.7933 35.0929 24.8827 34.2713 24.4851Z\",\n    fill: \"#36270B\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.6144 31.1296C19.9525 29.9778 19.5428 29.1537 19.2956 28.8857L18.5972 29.2671C18.802 29.4576 19.1946 30.029 19.1273 30.7911C19.0599 31.5533 17.8014 32.4219 17.1806 32.761C17.851 32.6971 19.2762 32.2814 19.6144 31.1296Z\",\n    fill: \"#36270B\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.0657 17.4782C13.2691 17.8507 13.0943 18.2685 12.9815 18.4309L14.167 18.3879L13.6584 17.4567C13.455 17.0842 12.8042 16.815 12.5043 16.7269C12.6067 16.8222 12.8623 17.1057 13.0657 17.4782Z\",\n    fill: \"#36270B\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.7507 11.0188C18.355 11.6515 18.9271 11.9711 19.1376 12.0518C19.5582 12.213 19.8789 12.269 20.318 12.1699C20.7571 12.0708 20.8787 11.5305 20.8846 11.2728C20.8846 11.2728 20.0299 11.8848 19.045 11.3547C17.7052 10.6337 16.567 9.55032 15.3732 8.49789C15.4895 8.70708 17.1464 10.3861 17.7507 11.0188Z\",\n    fill: \"#36270B\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.5198 7.44256C22.5717 8.35383 22.8167 9.04202 22.9328 9.27221L23.6646 9.10701C23.5486 8.87683 23.2752 8.23349 23.11 7.50162C22.9448 6.76976 23.0492 5.52838 23.122 4.99918C22.8996 5.43394 22.4679 6.53128 22.5198 7.44256Z\",\n    fill: \"#36270B\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.3922 16.091C13.6504 17.3529 13.6508 18.3872 13.6187 18.7466L12.8711 18.8103C12.9032 18.4509 12.9448 17.4666 12.8542 16.4043C12.7636 15.3421 12.2465 13.6921 11.9992 12.9998C12.356 13.5044 13.134 14.829 13.3922 16.091Z\",\n    fill: \"#36270B\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.0295 14.8448C32.9056 16.1944 31.8345 17.1505 31.4395 17.4599L30.8431 16.9883C31.2381 16.679 32.2872 15.7987 33.3232 14.7527C34.3592 13.7067 35.7014 11.8148 36.243 10.9995C35.9735 11.719 35.1534 13.4953 34.0295 14.8448Z\",\n    fill: \"#36270B\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_224_35064\",\n    x1: 13.2016,\n    y1: 14.9947,\n    x2: 32.1317,\n    y2: 32.3585,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#CEE832\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#78A811\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_224_35064\",\n    x1: 17.7267,\n    y1: 17.5898,\n    x2: 24.8864,\n    y2: 28.4407,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C99329\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#6C5424\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgVomit);\nexport default __webpack_public_path__ + \"static/media/vomit.fb8b7a62e2a224d0424236e5e50ba15c.svg\";\nexport { ForwardRef as ReactComponent };","import { useState } from \"react\";\nimport { Checking, Field, Input, PageTemplate } from \"components\";\nimport { calculateTowers } from \"calculates\";\n\nimport fish from \"./towers/fish.svg\";\nimport vomit from \"./towers/vomit.svg\";\nimport { repeat } from \"utils\";\n\nexport type TowersDifficulty = \"easy\" | \"medium\" | \"wicked\" | \"hard\" | \"brutal\";\n/*** true -- fish\n ** false -- vomit*/\nexport type TowersBuildLine = boolean[];\n\nconst difficulty: TowersDifficulty[] = [\n  \"easy\",\n  \"medium\",\n  \"wicked\",\n  \"hard\",\n  \"brutal\",\n];\n\nconst Towers = () => {\n  const [clientSeed, setClientSeed] = useState(\"\");\n  const [serverSeed, setServerSeed] = useState(\"\");\n  const [nonce, setNonce] = useState(\"\");\n  const [diff, setDiff] = useState<TowersDifficulty>(\"easy\");\n\n  const [serverHash, setServerHash] = useState(\"\");\n  const [tower, setTower] = useState<TowersBuildLine[]>(\n    repeat(9, () => repeat(4, () => true)),\n  );\n\n  const calculate = () => {\n    const { seed, tower } = calculateTowers(\n      clientSeed,\n      serverSeed,\n      nonce,\n      diff,\n    );\n\n    setServerHash(seed);\n    setTower(tower);\n  };\n\n  return (\n    <div className={\"mainWrapper\"}>\n      <PageTemplate>\n        <ul>\n          <li>\n            Client Seed: This is a random hexadecimal string generated by your\n            computer. The server does know about this client seed prior to the\n            bet execution. Ideally, it should be freshly generated for each bet.\n            However, some players have their \"lucky\" client seed which they\n            prefer to keep.\n          </li>\n          <li>\n            Server Seed: This is a random hexadecimal string generated by the\n            server. It is not shared with the player (until they rotate the\n            seed).\n          </li>\n          <li>\n            Server Seed Hash: Since the server seed is not shared with the user,\n            the server provides you with a hash of the server seed. This means\n            that you can check (after the seed is rotated) whether the server\n            was using the correct, shown server seed or not. The server seed\n            hash is always unique and corresponds to a server seed being used to\n            play games previously.\n          </li>\n        </ul>\n\n        <Checking />\n\n        <div className=\"pageContent\">\n          <div className=\"inputsRow\">\n            <Input\n              title=\"Client Seed\"\n              subTitle=\"Client Seed comes from your browser and is never generated by the server.\"\n              value={clientSeed}\n              onChange={({ target }) => setClientSeed(target.value)}\n            />\n\n            <Input\n              title=\"Nonce\"\n              subTitle=\"Nonce starts from 1 and is a count for the games you play (associated to the particular server seed).\"\n              value={nonce}\n              onChange={({ target }) => setNonce(target.value)}\n            />\n          </div>\n\n          <div className=\"inputsRow\">\n            <Input\n              title=\"Server Seed\"\n              subTitle=\"Server Seed is generated by the server. It is only shared with you after you rotate the seed.\"\n              value={serverSeed}\n              onChange={({ target }) => setServerSeed(target.value)}\n            />\n\n            <Field\n              title=\"Difficulty\"\n              subTitle=\"The difficulty/risk factor selected in the games.\">\n              <select\n                className=\"form-select\"\n                value={diff}\n                onChange={({ target }) =>\n                  setDiff(target.value as TowersDifficulty)\n                }>\n                {difficulty.map((v) => (\n                  <option value={v}>{v}</option>\n                ))}\n              </select>\n            </Field>\n          </div>\n\n          <div className=\"inputsRow\">\n            <Input\n              disabled\n              title=\"Server Seed (SHA-256)\"\n              subTitle=\"This is the SHA-256 hash of the Server Seed shown prior to rotation of the seed.\"\n              value={serverHash}\n            />\n\n            <Field\n              title=\"Actual Outcome\"\n              subTitle=\"This is the result/outcome of the game calculated locally in your game. It should match that shown at the main site.\">\n              <div className=\"tower\">\n                {tower.map((v) => (\n                  <div className=\"line\">\n                    {v.map((is) => (\n                      <img\n                        src={is ? fish : vomit}\n                        alt=\"cell\"\n                        className=\"towerCell\"\n                      />\n                    ))}\n                  </div>\n                ))}\n              </div>\n            </Field>\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"btn btn-info marginTop\"\n            onClick={calculate}>\n            Calculate\n          </button>\n        </div>\n      </PageTemplate>\n    </div>\n  );\n};\n\nexport default Towers;\n","export const repeat = <G>(\n  number: number,\n  callBack: (i: number, max: number) => G,\n) => {\n  const values: G[] = [];\n\n  for (let i = 0; i < number; i++) {\n    values.push(callBack(i, number));\n  }\n\n  return values;\n};\n"],"names":["difficulty","useState","clientSeed","setClientSeed","serverSeed","setServerSeed","nonce","setNonce","diff","setDiff","serverHash","setServerHash","repeat","tower","setTower","className","title","subTitle","value","onChange","target","map","v","disabled","is","src","fish","vomit","alt","type","onClick","calculateTowers","seed","number","callBack","values","i","push"],"sourceRoot":""}