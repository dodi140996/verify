{"version":3,"file":"static/js/207.7cb66896.chunk.js","mappings":"gKA8GA,UAzGc,WACZ,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEA,GAAoCN,EAAAA,EAAAA,UAAS,IAA7C,eAAOO,EAAP,KAAmBC,EAAnB,KACA,GAA0BR,EAAAA,EAAAA,UAGvB,CACDS,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,IAC1BC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,MAL3B,eAAOC,EAAP,KAAcC,EAAd,KAcA,OACE,gBAAKC,UAAW,cAAhB,UACE,UAAC,KAAD,YACE,2BACE,wTAOA,sKAKA,uYAUF,SAAC,KAAD,KAEA,iBAAKA,UAAU,cAAf,WACE,iBAAKA,UAAU,YAAf,WACE,SAAC,KAAD,CACEC,MAAM,cACNC,SAAS,4EACTC,MAAOf,EACPgB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBhB,EAAcgB,EAAOF,MAArC,KAGZ,SAAC,KAAD,CACEF,MAAM,QACNC,SAAS,wGACTC,MAAOX,EACPY,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBZ,EAASY,EAAOF,MAAhC,QAId,iBAAKH,UAAU,YAAf,WACE,SAAC,KAAD,CACEC,MAAM,cACNC,SAAS,gGACTC,MAAOb,EACPc,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBd,EAAcc,EAAOF,MAArC,KAEZ,SAAC,KAAD,CACEF,MAAM,wBACNC,SAAS,mFACTC,MAAOT,EACPY,UAAQ,QAIZ,iBAAKN,UAAU,YAAf,WACE,SAAC,KAAD,CACEC,MAAM,gBACNC,SAAS,gDACTJ,MAAOA,EAAMF,WAEf,SAAC,KAAD,CACEK,MAAM,eACNC,SAAS,6BACTJ,MAAOA,EAAMD,aAIjB,mBACEU,KAAK,SACLP,UAAU,yBACVQ,QAlFQ,WAChB,OAAwBC,EAAAA,EAAAA,IAAoBrB,EAAYE,EAAYE,GAA5DM,EAAR,EAAQA,MAAOY,EAAf,EAAeA,KACff,EAAce,GACdX,EAASD,EACV,EA2EO,8BAUT,C","sources":["pages/Poker/index.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport { Checking, Input, PageTemplate, CardRow } from \"components\";\nimport { calculateVideoPoker } from \"calculates\";\n\nconst Poker = () => {\n  const [clientSeed, setClientSeed] = useState(\"\");\n  const [serverSeed, setServerSeed] = useState(\"\");\n  const [nonce, setNonce] = useState(\"\");\n\n  const [serverHash, setServerHash] = useState(\"\");\n  const [cards, setCards] = useState<{\n    initial: number[];\n    coming: number[];\n  }>({\n    initial: [52, 52, 52, 52, 52],\n    coming: [52, 52, 52, 52, 52],\n  });\n\n  const calculate = () => {\n    const { cards, seed } = calculateVideoPoker(clientSeed, serverSeed, nonce);\n    setServerHash(seed);\n    setCards(cards);\n  };\n\n  return (\n    <div className={\"mainWrapper\"}>\n      <PageTemplate>\n        <ul>\n          <li>\n            Client Seed: This is a random hexadecimal string generated by your\n            computer. The server does know about this client seed prior to the\n            bet execution. Ideally, it should be freshly generated for each bet.\n            However, some players have their \"lucky\" client seed which they\n            prefer to keep.\n          </li>\n          <li>\n            Server Seed: This is a random hexadecimal string generated by the\n            server. It is not shared with the player (until they rotate the\n            seed).\n          </li>\n          <li>\n            Server Seed Hash: Since the server seed is not shared with the user,\n            the server provides you with a hash of the server seed. This means\n            that you can check (after the seed is rotated) whether the server\n            was using the correct, shown server seed or not. The server seed\n            hash is always unique and corresponds to a server seed being used to\n            play games previously.\n          </li>\n        </ul>\n\n        <Checking />\n\n        <div className=\"pageContent\">\n          <div className=\"inputsRow\">\n            <Input\n              title=\"Client Seed\"\n              subTitle=\"Client Seed comes from your browser and is never generated by the server.\"\n              value={clientSeed}\n              onChange={({ target }) => setClientSeed(target.value)}\n            />\n\n            <Input\n              title=\"Nonce\"\n              subTitle=\"Nonce starts from 1 and is a count for the games you play (associated to the particular server seed).\"\n              value={nonce}\n              onChange={({ target }) => setNonce(target.value)}\n            />\n          </div>\n\n          <div className=\"inputsRow\">\n            <Input\n              title=\"Server Seed\"\n              subTitle=\"Server Seed is generated by the server. It is only shared with you after you rotate the seed.\"\n              value={serverSeed}\n              onChange={({ target }) => setServerSeed(target.value)}\n            />\n            <Input\n              title=\"Server Seed (SHA-256)\"\n              subTitle=\"This is the SHA-256 hash of the Server Seed shown prior to rotation of the seed.\"\n              value={serverHash}\n              disabled\n            />\n          </div>\n\n          <div className=\"inputsRow\">\n            <CardRow\n              title=\"Initial Cards\"\n              subTitle=\"This are the initial cards given to the user.\"\n              cards={cards.initial}\n            />\n            <CardRow\n              title=\"Coming Cards\"\n              subTitle=\"This are the coming cards.\"\n              cards={cards.coming}\n            />\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"btn btn-info marginTop\"\n            onClick={calculate}>\n            Calculate\n          </button>\n        </div>\n      </PageTemplate>\n    </div>\n  );\n};\n\nexport default Poker;\n"],"names":["useState","clientSeed","setClientSeed","serverSeed","setServerSeed","nonce","setNonce","serverHash","setServerHash","initial","coming","cards","setCards","className","title","subTitle","value","onChange","target","disabled","type","onClick","calculateVideoPoker","seed"],"sourceRoot":""}